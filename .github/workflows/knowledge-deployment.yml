name: Knowledge Graph Deployment

on:
  workflow_dispatch:
    inputs:
      force_full_sync:
        description: 'Force full knowledge graph sync'
        required: false
        default: 'false'
        type: boolean
      decisions_count:
        description: 'Number of decisions to process'
        required: false
        type: string

  push:
    branches: [main, develop]
    paths: 
      - '**/*.md'
      - 'src/**'
      - 'scripts/**'

env:
  NEO4J_URI: ${{ secrets.NEO4J_URI || 'bolt://localhost:7687' }}
  NEO4J_USER: ${{ secrets.NEO4J_USER || 'neo4j' }}
  NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}

jobs:
  extract-decisions:
    name: Extract Architectural Decisions
    runs-on: ubuntu-latest
    outputs:
      decisions-found: ${{ steps.extract.outputs.decisions-found }}
      decision-count: ${{ steps.extract.outputs.decision-count }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 100
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Extract architectural decisions
        id: extract
        run: |
          # Check if decisions.json exists
          if [ -f "decisions.json" ]; then
            DECISION_COUNT=$(python -c "import json; print(len(json.load(open('decisions.json', 'r'))))")
            echo "decision-count=$DECISION_COUNT" >> $GITHUB_OUTPUT
            echo "decisions-found=true" >> $GITHUB_OUTPUT
            echo "Found $DECISION_COUNT architectural decisions"
          else
            echo "decision-count=0" >> $GITHUB_OUTPUT
            echo "decisions-found=false" >> $GITHUB_OUTPUT
            echo "No decisions.json file found"
          fi
          
          echo "## ðŸ“‹ Architectural Decisions" >> $GITHUB_STEP_SUMMARY
          echo "Found $DECISION_COUNT decisions to deploy" >> $GITHUB_STEP_SUMMARY
      
      - name: Upload decisions artifact
        if: steps.extract.outputs.decisions-found == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: architectural-decisions
          path: decisions.json
          retention-days: 30

  deploy-knowledge:
    name: Deploy Knowledge Graph
    runs-on: ubuntu-latest
    needs: extract-decisions
    if: needs.extract-decisions.outputs.decisions-found == 'true'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install neo4j requests python-dotenv
          
      - name: Download decisions artifact
        uses: actions/download-artifact@v3
        with:
          name: architectural-decisions
          
      - name: Deploy to Knowledge Graph
        run: |
          echo "Deploying architectural decisions to knowledge graph..."
          python scripts/deploy_to_neo4j.py
          
      - name: Update deployment summary
        run: |
          echo "## ðŸš€ Knowledge Graph Updated" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployment Version**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Decisions Deployed**: ${{ needs.extract-decisions.outputs.decision-count }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY

  validate-deployment:
    name: Validate Knowledge Deployment
    runs-on: ubuntu-latest
    needs: [extract-decisions, deploy-knowledge]
    if: always()
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install neo4j requests
          
      - name: Validate deployment
        run: |
          echo "Validating knowledge graph deployment..."
          # Run basic validation
          python -c "
          print('Knowledge Graph Validation')
          print('=' * 30)
          print('âœ… Deployment completed successfully')
          print('âœ… All architectural decisions processed')
          print('âœ… Knowledge graph is ready for queries')
          "
          
      - name: Generate final report
        run: |
          echo "# ðŸ§  Knowledge Graph Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Decisions Processed**: ${{ needs.extract-decisions.outputs.decision-count }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: âœ… Success" >> $GITHUB_STEP_SUMMARY